/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import javax.swing.table.DefaultTableModel;
import java.lang.Math;
import java.util.ArrayList;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author Dilantha
 */
public class MainWindow extends javax.swing.JFrame {
    int rowCount;
    int columnCount;
    ArrayList<String> subjects = new ArrayList<>();
    /**
     * Creates new form MainWindow
     */
    DefaultTableModel table;
    DefaultTableModel table2;
    public MainWindow() {
        initComponents();
        this.setExtendedState(MainWindow.MAXIMIZED_BOTH);
        jtable.setVisible(false);
        jtable2.setVisible(false);
        buttonSave.setEnabled(false);
        buttonSubmit.setEnabled(false);
        buttonOpen.setEnabled(false);
        buttonNext.setEnabled(false);
        table=(DefaultTableModel)jtable.getModel();
        table2=(DefaultTableModel)jtable2.getModel();
        table.setColumnCount(0);
        table2.setColumnCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTeacherName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtGrade = new javax.swing.JTextField();
        txtTerm = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        radioButtonMr = new javax.swing.JRadioButton();
        radioButtonMrs = new javax.swing.JRadioButton();
        radioButtonMs = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        chkboxScience = new javax.swing.JCheckBox();
        chkboxSinhala = new javax.swing.JCheckBox();
        chkboxBuddhism = new javax.swing.JCheckBox();
        chkboxHistory = new javax.swing.JCheckBox();
        chkboxMathematics = new javax.swing.JCheckBox();
        chkboxEnglish = new javax.swing.JCheckBox();
        chkboxElective1 = new javax.swing.JCheckBox();
        chkboxElective2 = new javax.swing.JCheckBox();
        chkboxElective3 = new javax.swing.JCheckBox();
        buttonNext = new javax.swing.JButton();
        chkboxSelectAll = new javax.swing.JCheckBox();
        txtNoStudents = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonOpen = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        buttonSubmit = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Teacher's Name");

        jLabel2.setText("Grade");

        jLabel5.setText("Term");

        radioButtonMr.setText("Mr");

        radioButtonMrs.setText("Mrs");
        radioButtonMrs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonMrsActionPerformed(evt);
            }
        });

        radioButtonMs.setText("Ms");
        radioButtonMs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonMsActionPerformed(evt);
            }
        });

        jLabel3.setText("Select the subjects");

        chkboxScience.setText("Science");
        chkboxScience.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxScienceActionPerformed(evt);
            }
        });

        chkboxSinhala.setText("Sinhala");
        chkboxSinhala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxSinhalaActionPerformed(evt);
            }
        });

        chkboxBuddhism.setText("Buddhism");
        chkboxBuddhism.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxBuddhismActionPerformed(evt);
            }
        });

        chkboxHistory.setText("History");
        chkboxHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxHistoryActionPerformed(evt);
            }
        });

        chkboxMathematics.setText("Mathematics");
        chkboxMathematics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxMathematicsActionPerformed(evt);
            }
        });

        chkboxEnglish.setText("English");
        chkboxEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxEnglishActionPerformed(evt);
            }
        });

        chkboxElective1.setText("Elective subject 1");
        chkboxElective1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxElective1ActionPerformed(evt);
            }
        });

        chkboxElective2.setText("Elective subject 2");
        chkboxElective2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxElective2ActionPerformed(evt);
            }
        });

        chkboxElective3.setText("Elective subject 3");
        chkboxElective3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxElective3ActionPerformed(evt);
            }
        });

        buttonNext.setText("Next");
        buttonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNextActionPerformed(evt);
            }
        });

        chkboxSelectAll.setText("Select All");
        chkboxSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxSelectAllActionPerformed(evt);
            }
        });

        jLabel6.setText("No. of students");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtNoStudents, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(radioButtonMr)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(radioButtonMrs)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(radioButtonMs))
                        .addComponent(txtTerm, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtGrade, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(txtTeacherName, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(chkboxSelectAll))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonNext)))
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkboxScience)
                            .addComponent(chkboxSinhala)
                            .addComponent(chkboxBuddhism)
                            .addComponent(chkboxHistory)
                            .addComponent(chkboxMathematics)
                            .addComponent(chkboxEnglish)
                            .addComponent(chkboxElective1)
                            .addComponent(chkboxElective2)
                            .addComponent(chkboxElective3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioButtonMr)
                            .addComponent(radioButtonMrs)
                            .addComponent(radioButtonMs))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNoStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkboxScience)
                    .addComponent(chkboxSelectAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkboxSinhala)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkboxBuddhism)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkboxHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkboxMathematics)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkboxEnglish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkboxElective1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkboxElective2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkboxElective3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonNext)
                .addGap(24, 24, 24))
        );

        jLabel4.setText("CodeSpark Software Solutions");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Marks Analyzer");

        jtable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Overall", jPanel3);

        jtable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtable2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab2", jPanel4);

        jButton2.setText("New");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonOpen.setText("Open in PDF");

        jButton1.setText("Clear All");

        buttonSubmit.setText("Submit");
        buttonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSubmitActionPerformed(evt);
            }
        });

        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTabbedPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonOpen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonSubmit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonExit))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(buttonSave)
                            .addComponent(buttonOpen)
                            .addComponent(jButton1)
                            .addComponent(buttonSubmit)
                            .addComponent(buttonExit))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioButtonMrsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonMrsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioButtonMrsActionPerformed

    private void radioButtonMsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonMsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioButtonMsActionPerformed

    private void chkboxScienceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxScienceActionPerformed
        if (!chkboxScience.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxScienceActionPerformed

    private void chkboxSinhalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxSinhalaActionPerformed
        if (!chkboxSinhala.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxSinhalaActionPerformed

    private void chkboxMathematicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxMathematicsActionPerformed
        if (!chkboxMathematics.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxMathematicsActionPerformed

    private void chkboxBuddhismActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxBuddhismActionPerformed
        if (!chkboxBuddhism.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxBuddhismActionPerformed

    private void chkboxHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxHistoryActionPerformed
        if (!chkboxHistory.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxHistoryActionPerformed

    private void chkboxEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxEnglishActionPerformed
        if (!chkboxEnglish.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxEnglishActionPerformed

    private void chkboxElective1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxElective1ActionPerformed
        if (!chkboxElective1.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }// TODO add your handling code here:
    }//GEN-LAST:event_chkboxElective1ActionPerformed

    private void chkboxElective3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxElective3ActionPerformed
        if (!chkboxElective3.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxElective3ActionPerformed

    private void chkboxElective2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxElective2ActionPerformed
        if (!chkboxElective2.isSelected()) {
            chkboxSelectAll.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxElective2ActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void chkboxSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxSelectAllActionPerformed
        if (chkboxSelectAll.isSelected()) {
            chkboxScience.setSelected(true);
            chkboxSinhala.setSelected(true);
            chkboxBuddhism.setSelected(true);
            chkboxHistory.setSelected(true);
            chkboxMathematics.setSelected(true);
            chkboxEnglish.setSelected(true);
            chkboxElective1.setSelected(true);
            chkboxElective2.setSelected(true);
            chkboxElective3.setSelected(true);
        }  else {
            chkboxScience.setSelected(false);
            chkboxSinhala.setSelected(false);
            chkboxBuddhism.setSelected(false);
            chkboxHistory.setSelected(false);
            chkboxMathematics.setSelected(false);
            chkboxEnglish.setSelected(false);
            chkboxElective1.setSelected(false);
            chkboxElective2.setSelected(false);
            chkboxElective3.setSelected(false);
        }
        if (chkboxScience.isSelected() || chkboxSinhala.isSelected() || chkboxEnglish.isSelected() || chkboxHistory.isSelected() || chkboxMathematics.isSelected() || chkboxBuddhism.isSelected() || chkboxHistory.isSelected() || chkboxElective1.isSelected() || chkboxElective2.isSelected() || chkboxElective3.isSelected()) {
            buttonNext.setEnabled(true);
        } else {
            buttonNext.setEnabled(false);
        }
    }//GEN-LAST:event_chkboxSelectAllActionPerformed

    private void buttonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNextActionPerformed
        buttonNext.setEnabled(false);
        jtable.setVisible(true);
        buttonSubmit.setEnabled(true);
        rowCount = 4;
        table.setRowCount(rowCount);
        table.addColumn("Name");
        if (chkboxScience.isSelected()) {
            table.addColumn("Science");
            subjects.add("Science");
        }
        if (chkboxSinhala.isSelected()) {
            table.addColumn("Sinhala");
            subjects.add("Sinhala");
        }
        if (chkboxBuddhism.isSelected()) {
            table.addColumn("Buddhism");
            subjects.add("Buddhism");
        }
        if (chkboxHistory.isSelected()) {
            table.addColumn("History");
            subjects.add("History");
        }
        if (chkboxMathematics.isSelected()) {
            table.addColumn("Mathematics");
            subjects.add("Mathematics");
        }
        if (chkboxEnglish.isSelected()) {
            table.addColumn("English");
            subjects.add("English");
        }
        if (chkboxElective1.isSelected()) {
            table.addColumn("Elective 1");
            subjects.add("Elective 1");
        }
        if (chkboxElective2.isSelected()) {
            table.addColumn("Elective 2");
            subjects.add("Elective 2");
        }
        if (chkboxElective3.isSelected()) {
            table.addColumn("Elective 3");
            subjects.add("Elective 3");
        }
        table2.setRowCount(subjects.size());
    }//GEN-LAST:event_buttonNextActionPerformed

    private void buttonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSubmitActionPerformed
        try {
            jtable.getCellEditor().stopCellEditing();
        } catch (Exception e) {
        }
        
        double tableData[][] = new double[rowCount][jtable.getColumnCount() + 2];
        String names[] = new String[rowCount];
        int count[][] = new int[subjects.size()][7];
        for (int i = 0; i < rowCount; i++) {
            names[i] = table.getValueAt(i, 0).toString();
            for (int j = 1; j < jtable.getColumnCount(); j++) {
                tableData[i][j] = Integer.parseInt(table.getValueAt(i, j).toString());
                if (tableData[i][j] >= 0 && tableData[i][j] <= 10) {
                    count[j - 1][0]++;
                } 
                if (tableData[i][j] >= 11 && tableData[i][j] <= 20) {
                    count[j - 1][1]++;
                } 
                if (tableData[i][j] >= 21 && tableData[i][j] <= 30) {
                    count[j - 1][2]++;
                } 
                if (tableData[i][j] >= 31 && tableData[i][j] <= 40) {
                    count[j - 1][3]++;
                } 
                if (tableData[i][j] >= 41 && tableData[i][j] <= 50) {
                    count[j - 1][4]++;
                } 
                if (tableData[i][j] >= 51 && tableData[i][j] <= 75) {
                    count[j - 1][5]++;
                } 
                if (tableData[i][j] >= 76 && tableData[i][j] <= 100) {
                    count[j - 1][6]++;
                }
            }
        }
        table.addColumn("Total");
        table.addColumn("Average");
        columnCount = jtable.getColumnCount();
        for (int j = 0; j < rowCount; j++) {
            double temp = 0.0;
            for (int k = 1; k < columnCount - 1; k++) {
                temp = temp + tableData[j][k];
            }
            tableData[j][columnCount - 2] = temp;
            tableData[j][columnCount - 1] = temp / (columnCount - 3);
        }
        
        double temp[];
        String tempName;
        for (int i = 0; i < rowCount; i++) {
            for (int j = 0; j < rowCount - 1; j++) {
                if (tableData[j][columnCount - 1] < tableData[j + 1][columnCount - 1]) {
                    temp = tableData[j];
                    tableData[j] = tableData[j + 1];
                    tableData[j + 1] = temp;
                    tempName = names[j];
                    names[j] = names[j + 1];
                    names[j + 1] = tempName;
                }
            }
        }
        
        table.addColumn("Rank");
        for (int i = 0; i < rowCount; i++) {
            table.setValueAt(names[i], i, 0);
            for (int j = 1; j < columnCount - 1; j++) {
                table.setValueAt((int)tableData[i][j], i, j);
            }
            table.setValueAt(Math.round(tableData[i][columnCount - 1] * 100) / 100.0, i, columnCount - 1);
            table.setValueAt(i + 1, i, columnCount);
        }
        
        /////////////////////
        jtable2.setEnabled(true);
        table2.addColumn("Subjects");
        table2.addColumn("0 - 10");
        table2.addColumn("11 - 20");
        table2.addColumn("21 - 30");
        table2.addColumn("31 - 40");
        table2.addColumn("41 - 50");
        table2.addColumn("51 - 75");
        table2.addColumn("76 - 100");
//        int count[][] = new int[subjects.size()][7];
//        for (int i = 1; i < subjects.size() + 1; i++) {
//            for (int j = 0; j < rowCount; j++) {
//                if (tableData[i][j] >= 0 && tableData[i][j] <= 10) {
//                    count[i - 1][0]++;
//                } 
//                if (tableData[i][j] >= 11 && tableData[i][j] <= 20) {
//                    count[i - 1][1]++;
//                } 
//                if (tableData[i][j] >= 21 && tableData[i][j] <= 30) {
//                    count[i - 1][2]++;
//                } 
//                if (tableData[i][j] >= 31 && tableData[i][j] <= 40) {
//                    count[i - 1][3]++;
//                } 
//                if (tableData[i][j] >= 41 && tableData[i][j] <= 50) {
//                    count[i - 1][4]++;
//                } 
//                if (tableData[i][j] >= 51 && tableData[i][j] <= 75) {
//                    count[i - 1][5]++;
//                } 
//                if (tableData[i][j] >= 76 && tableData[i][j] <= 100) {
//                    count[i - 1][6]++;
//                } 
//            }
//        }
        
        jtable2.setVisible(true);
        for (int i = 0; i < subjects.size(); i++) {
            table2.setValueAt(subjects.get(i), i, 0);
            for (int j = 1; j < 8; j++) {
                table2.setValueAt(count[i][j - 1], i, j);
            }
        }
    }//GEN-LAST:event_buttonSubmitActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MainWindow mW = new MainWindow();
        mW.setVisible(true);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            SwingUtilities.updateComponentTreeUI(mW);
        } catch (Exception e) {
        }
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void function() {
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            MainWindow mW = new MainWindow();
            mW.setVisible(true);
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                SwingUtilities.updateComponentTreeUI(mW);
            } catch (Exception e) {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonNext;
    private javax.swing.JButton buttonOpen;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonSubmit;
    private javax.swing.JCheckBox chkboxBuddhism;
    private javax.swing.JCheckBox chkboxElective1;
    private javax.swing.JCheckBox chkboxElective2;
    private javax.swing.JCheckBox chkboxElective3;
    private javax.swing.JCheckBox chkboxEnglish;
    private javax.swing.JCheckBox chkboxHistory;
    private javax.swing.JCheckBox chkboxMathematics;
    private javax.swing.JCheckBox chkboxScience;
    private javax.swing.JCheckBox chkboxSelectAll;
    private javax.swing.JCheckBox chkboxSinhala;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jtable;
    private javax.swing.JTable jtable2;
    private javax.swing.JRadioButton radioButtonMr;
    private javax.swing.JRadioButton radioButtonMrs;
    private javax.swing.JRadioButton radioButtonMs;
    private javax.swing.JTextField txtGrade;
    private javax.swing.JTextField txtNoStudents;
    private javax.swing.JTextField txtTeacherName;
    private javax.swing.JTextField txtTerm;
    // End of variables declaration//GEN-END:variables
}
